# Generated by Django 4.2.7 on 2025-09-29 19:38

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ChatAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("total_sessions", models.PositiveIntegerField(default=0)),
                ("ai_sessions", models.PositiveIntegerField(default=0)),
                ("counsellor_sessions", models.PositiveIntegerField(default=0)),
                ("escalated_sessions", models.PositiveIntegerField(default=0)),
                ("total_messages", models.PositiveIntegerField(default=0)),
                ("average_session_length", models.FloatField(default=0)),
                ("average_response_time", models.FloatField(default=0)),
                ("high_risk_sessions", models.PositiveIntegerField(default=0)),
                ("crisis_interventions", models.PositiveIntegerField(default=0)),
                ("average_rating", models.FloatField(blank=True, null=True)),
                ("completion_rate", models.FloatField(default=0)),
                ("top_categories", models.JSONField(blank=True, default=list)),
                ("common_concerns", models.JSONField(blank=True, default=list)),
                ("trending_keywords", models.JSONField(blank=True, default=list)),
                ("emotion_patterns", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "chat_analytics",
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="ChatFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "overall_rating",
                    models.IntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")]
                    ),
                ),
                (
                    "helpfulness_rating",
                    models.IntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")]
                    ),
                ),
                (
                    "ai_quality_rating",
                    models.IntegerField(
                        blank=True,
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")],
                        null=True,
                    ),
                ),
                ("positive_feedback", models.TextField(blank=True)),
                ("improvement_suggestions", models.TextField(blank=True)),
                ("would_recommend", models.BooleanField(blank=True, null=True)),
                ("would_use_again", models.BooleanField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "chat_feedback",
            },
        ),
        migrations.CreateModel(
            name="ChatMessage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("content", models.TextField()),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("user", "User Message"),
                            ("ai", "AI Response"),
                            ("counsellor", "Counsellor Message"),
                            ("system", "System Message"),
                            ("escalation", "Escalation Alert"),
                        ],
                        max_length=20,
                    ),
                ),
                ("tokens_used", models.PositiveIntegerField(default=0)),
                (
                    "response_time",
                    models.FloatField(
                        blank=True, help_text="Response time in seconds", null=True
                    ),
                ),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="low",
                        max_length=10,
                    ),
                ),
                ("requires_escalation", models.BooleanField(default=False)),
                ("is_edited", models.BooleanField(default=False)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "message_keywords",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Keywords extracted from message",
                    ),
                ),
                (
                    "message_sentiment",
                    models.JSONField(
                        blank=True, default=dict, help_text="Sentiment analysis results"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "chat_message",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="ChatSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "session_type",
                    models.CharField(
                        choices=[
                            ("ai_chat", "AI Chat"),
                            ("counsellor", "Counsellor Session"),
                            ("escalation", "Escalated Session"),
                            ("group", "Group Session"),
                        ],
                        default="ai_chat",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("paused", "Paused"),
                            ("completed", "Completed"),
                            ("escalated", "Escalated"),
                            ("closed", "Closed"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=200)),
                ("ai_model", models.CharField(default="gemini-pro", max_length=50)),
                ("system_prompt", models.TextField(blank=True)),
                (
                    "context_entries",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Journal entries used for context",
                    ),
                ),
                ("is_escalation", models.BooleanField(default=False)),
                ("escalation_reason", models.TextField(blank=True)),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="low",
                        max_length=10,
                    ),
                ),
                ("message_count", models.PositiveIntegerField(default=0)),
                ("total_tokens", models.PositiveIntegerField(default=0)),
                (
                    "session_rating",
                    models.IntegerField(
                        blank=True, help_text="User rating from 1-5", null=True
                    ),
                ),
                (
                    "session_keywords",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Keywords extracted from session content",
                    ),
                ),
                (
                    "session_themes",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Main themes discussed in session",
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("last_message_at", models.DateTimeField(auto_now=True)),
                ("ended_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "chat_session",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="ChatTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("welcome", "Welcome Messages"),
                            ("stress", "Stress Management"),
                            ("anxiety", "Anxiety Support"),
                            ("depression", "Depression Support"),
                            ("academic", "Academic Pressure"),
                            ("relationships", "Relationship Issues"),
                            ("crisis", "Crisis Intervention"),
                            ("general", "General Support"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "system_prompt",
                    models.TextField(help_text="System prompt for AI behavior"),
                ),
                (
                    "welcome_message",
                    models.TextField(blank=True, help_text="Initial message to user"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("requires_escalation_review", models.BooleanField(default=False)),
                (
                    "max_messages",
                    models.PositiveIntegerField(
                        default=50,
                        help_text="Maximum messages before suggesting human help",
                    ),
                ),
                ("usage_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "chat_template",
                "ordering": ["category", "name"],
            },
        ),
    ]
