# Generated by Django 4.2.7 on 2025-09-29 19:38

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Journal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=200)),
                ("content", models.TextField()),
                (
                    "entry_type",
                    models.CharField(
                        choices=[
                            ("text", "Text Entry"),
                            ("voice", "Voice Recording"),
                            ("mixed", "Text and Voice"),
                        ],
                        default="text",
                        max_length=10,
                    ),
                ),
                (
                    "voice_file",
                    models.FileField(
                        blank=True,
                        help_text="Audio file for voice entries",
                        null=True,
                        upload_to="journal_audio/",
                    ),
                ),
                (
                    "voice_transcription",
                    models.TextField(
                        blank=True,
                        help_text="Auto-generated transcription of voice entry",
                    ),
                ),
                (
                    "mood_level",
                    models.IntegerField(
                        choices=[
                            (1, "Very Low"),
                            (2, "Low"),
                            (3, "Neutral"),
                            (4, "Good"),
                            (5, "Excellent"),
                        ],
                        help_text="Overall mood level (1-5 scale)",
                    ),
                ),
                (
                    "emotions",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of emotions selected by user",
                    ),
                ),
                (
                    "tags",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="User-defined tags for categorization",
                    ),
                ),
                ("weather", models.CharField(blank=True, max_length=50)),
                ("location", models.CharField(blank=True, max_length=100)),
                (
                    "sentiment_score",
                    models.FloatField(
                        blank=True,
                        help_text="AI-generated sentiment score (-1 to 1)",
                        null=True,
                    ),
                ),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("low", "Low Risk"),
                            ("medium", "Medium Risk"),
                            ("high", "High Risk"),
                            ("critical", "Critical Risk"),
                        ],
                        default="low",
                        max_length=20,
                    ),
                ),
                (
                    "ai_insights",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="AI-generated insights and recommendations",
                    ),
                ),
                (
                    "content_keywords",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Extracted keywords for search and similarity",
                    ),
                ),
                (
                    "content_summary",
                    models.TextField(
                        blank=True, help_text="AI-generated content summary"
                    ),
                ),
                ("is_private", models.BooleanField(default=True)),
                ("shared_with_counsellor", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "journals_journal",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="JournalAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("week_start", models.DateField()),
                ("month_start", models.DateField()),
                ("entry_count", models.PositiveIntegerField(default=0)),
                ("total_words", models.PositiveIntegerField(default=0)),
                ("average_mood", models.FloatField(blank=True, null=True)),
                ("mood_variance", models.FloatField(blank=True, null=True)),
                ("high_risk_days", models.PositiveIntegerField(default=0)),
                ("consecutive_positive_days", models.PositiveIntegerField(default=0)),
                ("consecutive_negative_days", models.PositiveIntegerField(default=0)),
                ("voice_entries_count", models.PositiveIntegerField(default=0)),
                ("tags_used", models.JSONField(blank=True, default=list)),
                ("most_common_emotions", models.JSONField(blank=True, default=list)),
                ("trending_keywords", models.JSONField(blank=True, default=list)),
                ("theme_analysis", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "journals_analytics",
            },
        ),
        migrations.CreateModel(
            name="JournalPrompt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("prompt_text", models.TextField()),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("mood", "Mood Reflection"),
                            ("gratitude", "Gratitude"),
                            ("goals", "Goals & Aspirations"),
                            ("relationships", "Relationships"),
                            ("stress", "Stress Management"),
                            ("creativity", "Creative Expression"),
                            ("general", "General Reflection"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "target_mood_levels",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Mood levels this prompt is suitable for",
                    ),
                ),
                ("usage_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "journals_prompt",
                "ordering": ["category", "title"],
            },
        ),
        migrations.CreateModel(
            name="JournalReminder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reminder_time", models.TimeField()),
                (
                    "days_of_week",
                    models.JSONField(
                        default=list,
                        help_text="List of weekday numbers (0=Monday, 6=Sunday)",
                    ),
                ),
                (
                    "message",
                    models.TextField(
                        default="Time for your daily reflection! How are you feeling today?",
                        help_text="Custom reminder message",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("last_sent", models.DateTimeField(blank=True, null=True)),
                ("total_sent", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "journals_reminder",
            },
        ),
    ]
